<?php

// $Id: tagorder.module,v 1.2.4.5 2010/04/07 16:08:18 kiwinyc Exp $

/**
 * @file
 * Provides functionality to remember the order of taxonomy tag terms per node version
 */

/**
 * Implementation of hook_menu().
 */
function tagorder_menu() {
  $items['admin/settings/tagorder'] = array(
    'title' => 'Tag Order Settings',
    'description' => 'Set vocabularies and content types to remember order.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('tagorder_admin_settings'),
    'access arguments' => array('administer taxonomy'),
  );
  
  return $items;
}


/**
 * Define the settings form.
 */
function tagorder_admin_settings() {
  $vocabs = taxonomy_get_vocabularies();
  $vocabulary = array();
  foreach ($vocabs AS $vocab) {
    $vocabulary[$vocab->vid] = check_plain($vocab->name);
  }
  $form['tagorder_vocab'] = array(
    '#type' => 'checkboxes',
    '#title' => t('The entry order for these vocabularies should be remembered.'),
    '#options' => $vocabulary,
    '#default_value' => variable_get('tagorder_vocab', array('tags')),
  );
  $form['array_filter'] = array('#type' => 'hidden');
  return system_settings_form($form);
}


/**
 * Implementation of hook_nodeapi().
 */
function tagorder_nodeapi(&$node, $op, $teaser, $page) {
  switch ($op) {
    case 'delete':
    //if a node is being deleted, ensure it's also removed from the tagorder database.
    $result = db_query("DELETE FROM {tagorder} WHERE nid = %d", $node->nid);
    break;

    case 'update':
    //remove any/all entries for this node version (vid)
    $result = db_query("DELETE FROM {tagorder} WHERE vid = %d", $node->vid);
    case 'insert': 
    //insert weight values for all taxonomy terms in vocabularies that we have selected
    $vocabids = variable_get('tagorder_vocab', array('tags'));
    //first convert taxonomy[tags] to taxonomy[] arrays (in order)  
    foreach ($vocabids AS $vocabid) {
      if ($node->taxonomy['tags'][$vocabid]) {
        $node->taxonomy[$vocabid] = tagorder_taglist($node->taxonomy['tags'][$vocabid], $vocabid);
      } 
      $tids = $node->taxonomy[$vocabid];
      if (is_array($tids)) {
        $i=1;
        foreach ($tids AS $tid) {
          $result = db_query("INSERT INTO {tagorder} SET nid = %d, vid = %d, vocabid = %d, tid = %d, weight = %d", $node->nid, $node->vid, $vocabid, $tid, $i);
          $i++;
        }
      }
    }
    break;

    case 'prepare':
    case 'view':
    //load tag order information from tagorder
    if ($node->vid && $node->taxonomy) {
      unset($node->taxonomy);
      $weights = array();
      $result = db_query("SELECT tid, weight FROM {tagorder} WHERE vid = %d ORDER BY weight", $node->vid);
      while ($data = db_fetch_object($result)) {
        $weights[$data->tid] = $data->weight;
      }
      
      //currently get ALL vocabularies if using content_taxonomy, otherwise just vocabularies defined for this content type
      if (module_exists('content_taxonomy')) {
        $vocabs = taxonomy_get_vocabularies();
      } 
      else {
        $vocabs = taxonomy_get_vocabularies($node->type);
      }
      
      $tagorder_vocabids = variable_get('tagorder_vocab', array('tags'));
      $weighted_terms = array();
      foreach ($vocabs AS $vocab) {
        $these_terms = taxonomy_node_get_terms_by_vocabulary($node, $vocab->vid);
        if (in_array($vocab->vid, $tagorder_vocabids)) {
          foreach ($these_terms AS $this_term) {
            if ($weights[$this_term->tid]) {
              $this_term->weight = $weights[$this_term->tid];
            }
          }
          usort($these_terms, "tagorder_cmp");
        }
        $weighted_terms[] = $these_terms;
      }
      foreach ($weighted_terms AS $these_weighted_terms) {
        foreach ($these_weighted_terms AS $weighted_term) {
          $node->taxonomy[$weighted_term->tid] = $weighted_term;
        }
      }
    }
    break;
  }
}

/**
 * Function for generating array of tids to insert into the tagorder table for this node vid.
 */
function tagorder_taglist($tags, $vocabid) {
  $terms_array = array();
  $tags_array = split(",", $tags);
  foreach ($tags_array AS $tag) {
    $terms = taxonomy_get_term_by_name($tag);
    foreach ($terms AS $term) {
      if ($term->vid == $vocabid) {
        $this_tid = $term->tid;
      }
    }
    //if the term doesn't already exist for our vocabid, create it
    if (!$this_tid) {
      $newterm = array('vid' => $vocabid, 'name' => trim($tag));
      $status = taxonomy_save_term($newterm);
      $this_tid = $newterm['tid'];
    }
    $terms_array[] = $this_tid;
    $this_tid = '';
  }
  return $terms_array;
}

/**
 * Comparison function for sorting the the term array.
 */
function tagorder_cmp($a, $b) {
  if ($a == $b) {
    return 0;
  }
  return ($a->weight < $b->weight) ? -1 : 1;
}
